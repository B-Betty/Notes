研究自动驾驶技术的算法需要哪些知识？


l    “算法”一直是一个很值得一提的词汇。人们愿意提及算法这个词，是因为算法大概是一个硕博研究生刚刚好能够掌握的课题和论文深度的程度，是一个工程师刚刚好能掌握的技术水平和工作量。实际上，如果需要讨论自动驾驶技术，应该按照自顶向下的顺序来理顺：
整车体系结构 — 子系统架构 — 控制策略 — 算法 — 代码
    整车体系结构大致可分为：感知-规划-控制 3个核心子系统。每个核心子系统还可以细分，可以按照信息流向分为：
数据获取-数据融合-任务规划-路径规划-运动控制-底层执行
    中文论文推荐找一些参加过中国智能车挑战赛的博士生写的学位论文，这种论文论述比较完整，或者直接介绍参赛车辆的论文；英文论文推荐找找斯坦福、MIT、CMU介绍当年参加美国DARPA比赛车的论文，毕竟这些人参加完比赛就被整个团队挖到谷歌、奥迪等公司去了。
    自动驾驶是一个说小可小说大可大的topic，如果说要实现一个还“ok”的自动驾驶系统，学好cnn就够咯。然而即使end to end的方法能够处理99％的情况，剩下的1%依然会造成大问题
    Shashua在最近的几次报告里都说到目前自动驾驶还是有必要依照传统的perception-planning-controlling三步来。
    Perception部分SLAM算是一种解决办法，目前来看视觉辅助激光应该是短期内不会被替代的方案了，另外加上imu, 编码器, GPS等各种外部传感器的信息融合，感知部分基本上可以做到满足需求了。这里要学习的内容就包括计算机视觉，最优估计理论，以及各种传感器本身的特性。
    Planning部分，可以把它归结为一个搜索问题。就是在地图已知的情况下，可以把地图网格化，让机器人走格子。A*, D*, rrt这些都是常用的了。然而传统的方法在复杂的环境下依然解决的不是很好，解决思路可以参考deepmind最近玩游戏的几篇文章，目前这还属于未解决问题。这里要学习的内容主要常用的搜索算法，以及搜索规模难以控制之后的解决方法。
    Control部分我了解的不算多，经典的肯定当属PID了，而且在绝大多数情况下PID应该已经可以handle。更先进的方法肯定有，希望有懂的同学可以补充补充吧。按照我导师所说，控制应该算是已经解决的问题了，不需要太多的研究。
    无人驾驶车是一个完整的软硬件系统。硬件系统除了常规的汽车的配置还涉及到专用于无人驾驶技术的传感器，比如摄像头，雷达等。每个公司设计无人车的思想不尽相同，因此软件算法更是难以概括。
    在编程基础中 Python 是非常友好的，Python 易于学习和使用，拥有大量的库，能够快速的把你的思路和想法实现。不过当你想把这些算法移植到硬件设备上或者涉及更低层的方法时你就不得不用 C/C++ 啦。
    在无人车涉及到的如此多的技术中，计算机视觉和图像处理是不可或缺的一部分。以优达学城无人驾驶车工程师（英文） 这门课程第一学期中涉及的到的算法来举例说明。网址：http://cn.udacity.com/course/self-driving-car-engineer--nd013
1. Project1 道路线检测
2. Project 2 交通标志识别
    无人车也是要懂得交通规则的，所以识别交通标志并根据标志的指示执行不同指令也非常重要。这个识别交通标志的项目就需要使用深度学习（卷积神经网络）的方法来完成。
3. Project 3 高级道路线检测和车辆检测
    高级的道路线检测需要计算相机校准矩阵和失真系数对原始图像的失真进行校正；使用图像处理方法，将图像进行二值化处理；应用透视变换来纠正二值化图像（“鸟瞰视图”）；检测车道并查找确定车道的曲率和相对于中心的车辆位置；将检测到的车道边界扭曲回原始图像；可视化车道，输出车道曲率和车辆位置。
https://www.zhihu.com/question/46575222
